<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LuckyJet Pro System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
            color: white;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .login-container, .app-container {
            width: 90%;
            max-width: 400px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 2rem;
            border-radius: 20px;
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
        }

        .app-container {
            display: none;
            max-width: 500px;
        }

        .header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .header h1 {
            color: #9b59b6;
            font-size: 1.8rem;
            margin-bottom: 0.5rem;
        }

        .input-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            color: #ddd;
        }

        input {
            width: 100%;
            padding: 12px;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            color: white;
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }

        input:focus {
            outline: none;
            border-color: #9b59b6;
            box-shadow: 0 0 10px rgba(155, 89, 182, 0.5);
        }

        button {
            width: 100%;
            padding: 15px;
            background: linear-gradient(45deg, #9b59b6, #3498db);
            border: none;
            border-radius: 8px;
            color: white;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 1rem;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(155, 89, 182, 0.4);
        }

        .result {
            background: rgba(0, 0, 0, 0.2);
            padding: 1.5rem;
            border-radius: 12px;
            margin-top: 1rem;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.5s ease;
        }

        .result.show {
            opacity: 1;
            transform: translateY(0);
        }

        .prediction {
            text-align: center;
            font-size: 1.8rem;
            font-weight: bold;
            color: #9b59b6;
            margin-bottom: 1rem;
        }

        .accuracy {
            text-align: center;
            color: #3498db;
            margin-bottom: 1rem;
        }

        .timestamp {
            text-align: center;
            color: #ddd;
            font-size: 0.9rem;
        }

        .loading {
            text-align: center;
            margin: 1rem 0;
            display: none;
        }

        .loading:after {
            content: '';
            animation: dots 1s steps(5, end) infinite;
        }

        @keyframes dots {
            0%, 20% { content: '.'; }
            40% { content: '..'; }
            60% { content: '...'; }
            80% { content: '....'; }
            100% { content: '.....'; }
        }

        .logout-btn {
            background: rgba(255, 255, 255, 0.1);
            margin-top: 1rem;
        }

        .stats {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            padding: 1rem;
            background: rgba(0, 0, 0, 0.2);
            border-radius: 8px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-value {
            font-size: 1.2rem;
            font-weight: bold;
            color: #3498db;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #ddd;
        }
    </style>
</head>
<body>
    <!-- Login Container -->
    <div class="login-container" id="loginForm">
        <div class="header">
            <h1>LuckyJet Pro Access</h1>
            <p>Système de prédiction avancé</p>
        </div>

        <div class="input-group">
            <label>Nom d'utilisateur</label>
            <input type="text" id="username" placeholder="Entrez votre nom d'utilisateur">
        </div>

        <div class="input-group">
            <label>Mot de passe</label>
            <input type="password" id="password" placeholder="Entrez votre mot de passe">
        </div>

        <button onclick="authenticate()">Se connecter</button>
    </div>

    <!-- App Container -->
    <div class="app-container" id="appContainer">
        <div class="header">
            <h1>Robot Prédicteur LuckyJet</h1>
        </div>

        <div class="stats">
            <div class="stat-item">
                <div class="stat-value">90%</div>
                <div class="stat-label">Précision</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="currentTime"></div>
                <div class="stat-label">Heure</div>
            </div>
        </div>

        <div class="input-group">
            <label>Dernière cote</label>
            <input type="number" id="lastQuote" step="0.01" placeholder="Ex: 1.45">
        </div>

        <div class="input-group">
            <label>Avant-dernière cote</label>
            <input type="number" id="previousQuote" step="0.01" placeholder="Ex: 1.32">
        </div>

        <button onclick="analyzeCotes()">Analyser</button>

        <div class="loading" id="loading">Analyse en cours</div>

        <div class="result" id="result">
            <div class="prediction" id="predictionValue"></div>
            <div class="accuracy" id="accuracyValue"></div>
            <div class="timestamp" id="timestampValue"></div>
        </div>

        <button class="logout-btn" onclick="logout()">Déconnexion</button>
    </div>

    <script>
        // Authentification
        function authenticate() {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            if (username === 'luckyjet' && password === 'hackmontante225') {
                document.getElementById('loginForm').style.display = 'none';
                document.getElementById('appContainer').style.display = 'block';
                updateTime();
                setInterval(updateTime, 1000);
            } else {
                alert('Identifiants incorrects');
            }
        }

        // Mise à jour de l'heure
        function updateTime() {
            const now = new Date();
            document.getElementById('currentTime').textContent = 
                now.toLocaleTimeString('fr-FR');
        }

        // Analyse des cotes
        function analyzeCotes() {
            const lastQuote = parseFloat(document.getElementById('lastQuote').value);
            const previousQuote = parseFloat(document.getElementById('previousQuote').value);

            if (!lastQuote || !previousQuote) {
                alert('Veuillez entrer des cotes valides');
                return;
            }

            document.getElementById('loading').style.display = 'block';
            document.getElementById('result').classList.remove('show');

            setTimeout(() => {
                const prediction = generatePrediction(lastQuote, previousQuote);
                const now = new Date();

                document.getElementById('predictionValue').textContent = 
                    `Prochaine cote: ${prediction}`;
                document.getElementById('accuracyValue').textContent = 
                    `Précision: 90%`;
                document.getElementById('timestampValue').textContent = 
                    `${now.toLocaleTimeString('fr-FR')}`;

                document.getElementById('loading').style.display = 'none';
                document.getElementById('result').classList.add('show');
            }, 1500);
        }

        // Génération de la prédiction
        function generatePrediction(last, previous) {
            const trend = last - previous;
            const volatility = Math.random() * 0.1;
            let prediction = last + (trend * 0.7) + volatility;
            prediction = Math.max(1.20, Math.min(1.90, prediction));
            return prediction.toFixed(2);
        }

        // Déconnexion
        function logout() {
            document.getElementById('loginForm').style.display = 'block';
            document.getElementById('appContainer').style.display = 'none';
            document.getElementById('username').value = '';
            document.getElementById('password').value = '';
        }

        // Validation des inputs
        document.querySelectorAll('input[type="number"]').forEach(input => {
            input.addEventListener('input', function() {
                let value = parseFloat(this.value);
                if (value < 1.0) this.value = 1.0;
                if (value > 10.0) this.value = 10.0;
            });
        });
    </script>
</body>
</html>
